buildscript {
    ext {
        mockitoCoreVersion = "2.23.4"
        httpClientVersion = "4.5.6"
    }
}

plugins {
    id "java"
    id "idea"
    id "eclipse"
    id "jacoco"
    id "io.spring.dependency-management" version "1.0.6.RELEASE"
    id "org.springframework.boot" version "2.0.2.RELEASE"
    id "com.github.ksoichiro.console.reporter" version "0.5.0"
    id "io.franzbecker.gradle-lombok" version "1.14"
}

group = "com.crossover"
version = "0.0.1-SNAPSHOT"
sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

configurations {
    developmentOnly

    runtimeClasspath {
        extendsFrom developmentOnly
    }
}

dependencies {
    compile("org.springframework.boot:spring-boot-starter")
    compile("org.springframework.boot:spring-boot-starter-aop")
    compile("org.springframework.boot:spring-boot-starter-data-jpa")
    compile("org.springframework.boot:spring-boot-starter-data-rest")
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("com.fasterxml.jackson.datatype:jackson-datatype-jsr310")
    compile("org.liquibase:liquibase-core")
    compile("mysql:mysql-connector-java")

    developmentOnly("org.springframework.boot:spring-boot-devtools")

    testCompile("com.h2database:h2")
    testCompile("org.springframework.boot:spring-boot-starter-test")
    testCompile("org.mockito:mockito-core:${mockitoCoreVersion}")
    testCompile("org.apache.httpcomponents:httpclient:${httpClientVersion}")
}

lombok {
    version = "1.18.4"
    sha256 = ""
}

jacocoTestReport {
    afterEvaluate {
        classDirectories = files(classDirectories.files.collect {
            fileTree(dir: it, exclude: ["com/crossover/techtrial/dto/**",
                                        "com/crossover/techtrial/model/**"])
        })
    }
}